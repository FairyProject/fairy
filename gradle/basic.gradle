//file:noinspection GroovyAssignabilityCheck

// Main script
apply plugin: "io.freefair.aspectj.post-compile-weaving"
if (project.buildFile != null && project.buildFile.exists() && findProperty("deploy.imanityLibraries") == "true") {
    apply plugin: "maven-publish"
}

configurations {
    compileOnly {
        canBeResolved = true
    }
}

processResources {
    expand projectVersion: project.version
}

if (project.buildFile != null && project.buildFile.exists() && findProperty("deploy.imanityLibraries") == "true") {
    tasks.jar.archiveClassifier.set("sources")
    tasks.shadowJar.archiveClassifier.set(null)

    publishing {
        publications {
            shadow(MavenPublication) { publication ->
                from project.shadow.component(publication)
                pom {
                    name = "Fairy " + project.name
                    description = "Fairy is a compat & open-sourced Java Framework with useful features"
                }
            }
        }

        repositories {
            maven {
                credentials {
                    username findProperty("imanityLibrariesUsername")
                    password findProperty("imanityLibrariesPassword")
                }
                url "https://maven.imanity.dev/repository/imanity-libraries/"
            }
        }
    }
}

publish.dependsOn build
shadowJar.dependsOn build

tasks.withType(JavaCompile) {
    sourceCompatibility = targetCompatibility = "1.8"
    options.encoding = "UTF-8"
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.22"
    annotationProcessor "org.projectlombok:lombok:1.18.22"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.22"
    compileOnly "org.jetbrains:annotations:19.0.0"
    annotationProcessor "org.jetbrains:annotations:19.0.0"

    compileOnly JacksonCore
    compileOnly JacksonDataBind
    compileOnly AspectJRuntime
    compileOnly "javax.persistence:javax.persistence-api:2.2"

    if (project.name.contains("-")) {
        def names = project.name.split("-")

        if (names[1] == "platform") {
            if (names[0] != "core") {
                api project(":io.fairyproject.platforms:core-platform")
            }
        } else {
            def platformName = names[0]

            compileOnly project(":io.fairyproject.platforms:$platformName-platform")
        }
    } else {
        compileOnly project(":io.fairyproject.platforms:core-platform")
    }

    compileOnly "com.google.guava:guava:" + findProperty("guava.version")
    compileOnly "com.google.code.gson:gson:" + findProperty("gson.version")
    compileOnly "org.yaml:snakeyaml:" + findProperty("yaml.version")
    compileOnly "org.apache.logging.log4j:log4j-core:" + findProperty("log4j.version")
    compileOnly "com.github.ben-manes.caffeine:caffeine:" + findProperty("caffeine.version")
    compileOnly "org.apache.commons:commons-lang3:3.11"
    compileOnly "commons-io:commons-io:2.7"
    compileOnly "it.unimi.dsi:fastutil:8.1.0"
    compileOnly "net.md-5:bungeecord-chat:1.16-R0.3"

    // Test dependencies
    testImplementation "junit:junit:4.13"
    testImplementation "org.junit.platform:junit-platform-runner:1.0.3"
    testImplementation "org.junit.platform:junit-platform-suite-api:1.0.3"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "com.google.jimfs:jimfs:1.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}
sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
}
compileJava.ajc.options.compilerArgs += "-showWeaveInfo"
compileJava.ajc.options.compilerArgs += "-verbose"

compileTestJava.ajc.options.aspectpath.from sourceSets.main.output